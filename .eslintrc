{
	"env": {
		"browser": true,
		"es2020": true
	},
	"settings": {
		"react": {
			"version": "18.2.0"
		}
	},
	"extends": [
		"eslint:recommended",
		"plugin:react/recommended",
		"plugin:@typescript-eslint/eslint-recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:react/jsx-runtime",
		"plugin:react-hooks/recommended",
		"plugin:promise/recommended"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaVersion": "latest",
		"sourceType": "module",
		"project": [
			"./tsconfig.json",
			"./tsconfig.node.json"
		]
	},
	"plugins": [
		"react",
		"react-hooks",
		"react-refresh",
		"@typescript-eslint",
		"deprecation",
		"promise"
	],
	"rules": {
		"indent": "off",
		"@typescript-eslint/indent": [
			"error",
			"tab",
			{
				"SwitchCase": 1,
				"FunctionDeclaration": {
					"parameters": 1,
					"body": 1
				},
				"FunctionExpression": {
					"parameters": 1,
					"body": 1
				},
				"ArrayExpression": 1
			}
		],
		"linebreak-style": [
			"error",
			"windows"
		],
		"quotes": [
			"error",
			"double"
		],
		"@typescript-eslint/quotes": [
			"error",
			"double"
		],
		"semi": [
			"error",
			"always"
		],
		"@typescript-eslint/semi": [
			"error",
			"always"
		],
		"comma-dangle": [
			"error",
			"always-multiline"
		],
		"no-var": [
			"error"
		],
		"object-curly-spacing": [
			"error",
			"always"
		],
		"prefer-template": "error",
		"brace-style": [
			"error",
			"allman",
			{
				"allowSingleLine": true
			}
		],
		"no-unused-vars": "off", // otherwise it can conflict with typescript rules. Typescript finds more usages.
		"@typescript-eslint/no-unused-vars": [
			"error",
			{
				"argsIgnorePattern": "^_",
				"varsIgnorePattern": "(^_)|(^React$)", // import * as React from "react" for old react versions
				"caughtErrors": "none"
			}
		],
		"deprecation/deprecation": "error",
		"react-refresh/only-export-components": "warn",
		"react-hooks/rules-of-hooks": [
			"error"
		],
		"react-hooks/exhaustive-deps": [
			"error"
		],
		"@typescript-eslint/consistent-type-imports": [
			"error",
			{
				"prefer": "type-imports",
				"fixStyle": "inline-type-imports"
			}
		]
	},
}